{"ast":null,"code":"var _jsxFileName = \"/home/dnordstrom/Code/javascript-interview-exercises/src/components/CompanyList.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport CompanyListItem from './CompanyListItem';\nimport FilterButton from './FilterButton';\nimport Actions from '../actions';\nimport Notifier from '../util/Notifier';\n\nclass CompanyList extends React.Component {\n  /**\n   * Handles location filter clicks.\n   *\n   * @param {Event} event\n   * @memberof CompanyList\n   */\n  onFilterClick(event) {\n    event.preventDefault();\n    this.props.toggleFilter(event.target.innerText);\n  }\n  /**\n   * Handles list item clicks.\n   *\n   * @param {object} company\n   * @memberof CompanyList\n   */\n\n\n  onItemClick(company) {\n    Notifier.notify(\"\".concat(company.name, \" is located in \").concat(company.location));\n  }\n  /**\n   * Renders location filter buttons.\n   *\n   * @returns Location filter buttons\n   * @memberof CompanyList\n   */\n\n\n  renderFilters() {\n    const _this$props = this.props,\n          companies = _this$props.companies,\n          filters = _this$props.filters;\n    const locations = [...new Set(companies.map(company => company.location))];\n    return locations.map(location => React.createElement(FilterButton, {\n      active: filters.includes(location),\n      key: location,\n      location: location,\n      onClick: this.onFilterClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n  /**\n   * Renders company list items based on location filters.\n   *\n   * @returns Unordered list of companies\n   * @memberof CompanyList\n   */\n\n\n  renderList() {\n    const filteredCompanies = this.props.filteredCompanies;\n    return React.createElement(\"ul\", {\n      className: \"CompanyList__List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, filteredCompanies.map(company => React.createElement(CompanyListItem, Object.assign({\n      key: company.id,\n      onClick: this.onItemClick.bind(this, company)\n    }, company, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))));\n  }\n  /**\n   * Renders the component.\n   *\n   * @returns\n   * @memberof CompanyList\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CompanyList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.renderFilters(), this.renderList());\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  filters: state.filters,\n  filteredCompanies: state.filteredCompanies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilter: location => dispatch(Actions.toggleFilter(location))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyList);","map":{"version":3,"sources":["/home/dnordstrom/Code/javascript-interview-exercises/src/components/CompanyList.js"],"names":["React","connect","CompanyListItem","FilterButton","Actions","Notifier","CompanyList","Component","onFilterClick","event","preventDefault","props","toggleFilter","target","innerText","onItemClick","company","notify","name","location","renderFilters","companies","filters","locations","Set","map","includes","bind","renderList","filteredCompanies","id","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACxC;;;;;;AAMAC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACC,cAAN;AAEA,SAAKC,KAAL,CAAWC,YAAX,CAAwBH,KAAK,CAACI,MAAN,CAAaC,SAArC;AACD;AAED;;;;;;;;AAMAC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnBX,IAAAA,QAAQ,CAACY,MAAT,WAAmBD,OAAO,CAACE,IAA3B,4BAAiDF,OAAO,CAACG,QAAzD;AACD;AAED;;;;;;;;AAMAC,EAAAA,aAAa,GAAG;AAAA,wBACiB,KAAKT,KADtB;AAAA,UACNU,SADM,eACNA,SADM;AAAA,UACKC,OADL,eACKA,OADL;AAEd,UAAMC,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQH,SAAS,CAACI,GAAV,CAAcT,OAAO,IAAIA,OAAO,CAACG,QAAjC,CAAR,CAAJ,CAAlB;AAEA,WAAOI,SAAS,CAACE,GAAV,CAAcN,QAAQ,IAC3B,oBAAC,YAAD;AACE,MAAA,MAAM,EAAEG,OAAO,CAACI,QAAR,CAAiBP,QAAjB,CADV;AAEE,MAAA,GAAG,EAAEA,QAFP;AAGE,MAAA,QAAQ,EAAEA,QAHZ;AAIE,MAAA,OAAO,EAAE,KAAKX,aAAL,CAAmBmB,IAAnB,CAAwB,IAAxB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAQD;AAED;;;;;;;;AAMAC,EAAAA,UAAU,GAAG;AAAA,UACHC,iBADG,GACmB,KAAKlB,KADxB,CACHkB,iBADG;AAGX,WACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAACJ,GAAlB,CAAsBT,OAAO,IAC5B,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACc,EADf;AAEE,MAAA,OAAO,EAAE,KAAKf,WAAL,CAAiBY,IAAjB,CAAsB,IAAtB,EAA4BX,OAA5B;AAFX,OAGMA,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADL,CADF;AAWD;AAED;;;;;;;;AAMAe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,aAAL,EADH,EAEG,KAAKQ,UAAL,EAFH,CADF;AAMD;;AA9EuC;;AA+EzC;;AAED,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,SAAS,EAAEY,KAAK,CAACZ,SADe;AAEhCC,EAAAA,OAAO,EAAEW,KAAK,CAACX,OAFiB;AAGhCO,EAAAA,iBAAiB,EAAEI,KAAK,CAACJ;AAHO,CAAL,CAA7B;;AAMA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,YAAY,EAAEO,QAAQ,IAAIgB,QAAQ,CAAC/B,OAAO,CAACQ,YAAR,CAAqBO,QAArB,CAAD;AADI,CAAL,CAAnC;;AAIA,eAAelB,OAAO,CACpB+B,eADoB,EAEpBE,kBAFoB,CAAP,CAGb5B,WAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport CompanyListItem from './CompanyListItem';\nimport FilterButton from './FilterButton';\nimport Actions from '../actions';\nimport Notifier from '../util/Notifier';\n\nclass CompanyList extends React.Component {\n  /**\n   * Handles location filter clicks.\n   *\n   * @param {Event} event\n   * @memberof CompanyList\n   */\n  onFilterClick(event) {\n    event.preventDefault();\n\n    this.props.toggleFilter(event.target.innerText);\n  }\n\n  /**\n   * Handles list item clicks.\n   *\n   * @param {object} company\n   * @memberof CompanyList\n   */\n  onItemClick(company) {\n    Notifier.notify(`${company.name} is located in ${company.location}`);\n  }\n\n  /**\n   * Renders location filter buttons.\n   *\n   * @returns Location filter buttons\n   * @memberof CompanyList\n   */\n  renderFilters() {\n    const { companies, filters } = this.props;\n    const locations = [...new Set(companies.map(company => company.location))];\n\n    return locations.map(location => (\n      <FilterButton\n        active={filters.includes(location)}\n        key={location}\n        location={location}\n        onClick={this.onFilterClick.bind(this)}>\n      </FilterButton>\n    ));\n  }\n\n  /**\n   * Renders company list items based on location filters.\n   *\n   * @returns Unordered list of companies\n   * @memberof CompanyList\n   */\n  renderList() {\n    const { filteredCompanies } = this.props;\n\n    return (\n      <ul className=\"CompanyList__List\">\n          {filteredCompanies.map(company => (\n            <CompanyListItem\n              key={company.id}\n              onClick={this.onItemClick.bind(this, company)}\n              {...company}>\n            </CompanyListItem>\n          ))}\n        </ul>\n    );\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns\n   * @memberof CompanyList\n   */\n  render() {\n    return (\n      <div className=\"CompanyList\">\n        {this.renderFilters()}\n        {this.renderList()}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  filters: state.filters,\n  filteredCompanies: state.filteredCompanies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilter: location => dispatch(Actions.toggleFilter(location))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyList);"]},"metadata":{},"sourceType":"module"}