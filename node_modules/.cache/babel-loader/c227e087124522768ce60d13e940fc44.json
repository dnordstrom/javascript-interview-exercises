{"ast":null,"code":"var _jsxFileName = \"/home/dnordstrom/Code/javascript-interview-exercises/src/components/CompanyList.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport CompanyListItem from './CompanyListItem';\nimport Filter from './Filter';\nimport actions from '../actions';\nimport Notifier from '../util/Notifier';\n\nclass CompanyList extends React.Component {\n  constructor() {\n    super();\n  } // Returns companies that should be visible according to active filter\n\n\n  getFilteredCompanies() {\n    let filteredCompanies;\n\n    if (filters.length) {\n      filteredCompanies = companies.filter(company => filters.includes(company.location));\n    } else {\n      filteredCompanies = companies;\n    }\n\n    return filteredCompanies;\n  } // Filter click handler\n\n\n  onFilterClick(event) {\n    event.preventDefault();\n    this.props.toggleFilter(event.target.innerText);\n  } // Company item click handler\n\n\n  onItemClick(company) {\n    Notifier.notify(\"\".concat(company.name, \" is located in \").concat(company.location));\n  }\n\n  render() {\n    const _this$props = this.props,\n          companies = _this$props.companies,\n          filters = _this$props.filters;\n    const locations = [...new Set(companies.map(company => company.location))];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, locations.map(location => React.createElement(Filter, {\n      active: filters.includes(location),\n      key: location,\n      location: location,\n      onClick: onFilterClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, getFilteredCompanies().map(company => React.createElement(CompanyListItem, Object.assign({\n      key: company.id,\n      onClick: onItemClick.bind(null, company)\n    }, company, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilter: location => dispatch(actions.toggleFilter(location))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyList);","map":{"version":3,"sources":["/home/dnordstrom/Code/javascript-interview-exercises/src/components/CompanyList.js"],"names":["React","connect","CompanyListItem","Filter","actions","Notifier","CompanyList","Component","constructor","getFilteredCompanies","filteredCompanies","filters","length","companies","filter","company","includes","location","onFilterClick","event","preventDefault","props","toggleFilter","target","innerText","onItemClick","notify","name","render","locations","Set","map","id","bind","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ;AACD,GAHuC,CAKxC;;;AACAC,EAAAA,oBAAoB,GAAG;AACrB,QAAIC,iBAAJ;;AAEA,QAAIC,OAAO,CAACC,MAAZ,EAAoB;AAClBF,MAAAA,iBAAiB,GAAGG,SAAS,CAACC,MAAV,CAClBC,OAAO,IAAIJ,OAAO,CAACK,QAAR,CAAiBD,OAAO,CAACE,QAAzB,CADO,CAApB;AAGD,KAJD,MAIO;AACLP,MAAAA,iBAAiB,GAAGG,SAApB;AACD;;AAED,WAAOH,iBAAP;AACD,GAlBuC,CAoBxC;;;AACAQ,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACC,cAAN;AAEA,SAAKC,KAAL,CAAWC,YAAX,CAAwBH,KAAK,CAACI,MAAN,CAAaC,SAArC;AACD,GAzBuC,CA2BxC;;;AACAC,EAAAA,WAAW,CAACV,OAAD,EAAU;AACnBV,IAAAA,QAAQ,CAACqB,MAAT,WAAmBX,OAAO,CAACY,IAA3B,4BAAiDZ,OAAO,CAACE,QAAzD;AACD;;AAEDW,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKP,KAD7B;AAAA,UACCR,SADD,eACCA,SADD;AAAA,UACYF,OADZ,eACYA,OADZ;AAEP,UAAMkB,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQjB,SAAS,CAACkB,GAAV,CAAchB,OAAO,IAAIA,OAAO,CAACE,QAAjC,CAAR,CAAJ,CAAlB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,SAAS,CAACE,GAAV,CAAcd,QAAQ,IACrB,oBAAC,MAAD;AACE,MAAA,MAAM,EAAEN,OAAO,CAACK,QAAR,CAAiBC,QAAjB,CADV;AAEE,MAAA,GAAG,EAAEA,QAFP;AAGE,MAAA,QAAQ,EAAEA,QAHZ;AAIE,MAAA,OAAO,EAAEC,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,oBAAoB,GAAGsB,GAAvB,CAA2BhB,OAAO,IACjC,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACiB,EADf;AAEE,MAAA,OAAO,EAAEP,WAAW,CAACQ,IAAZ,CAAiB,IAAjB,EAAuBlB,OAAvB;AAFX,OAGMA,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADH,CAVF,CADF;AAsBD;;AA1DuC;;AA2DzC;;AAED,MAAMmB,eAAe,GAAGC,KAAK,KAAK;AAChCtB,EAAAA,SAAS,EAAEsB,KAAK,CAACtB,SADe;AAEhCF,EAAAA,OAAO,EAAEwB,KAAK,CAACxB;AAFiB,CAAL,CAA7B;;AAKA,MAAMyB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,YAAY,EAAEL,QAAQ,IAAIoB,QAAQ,CAACjC,OAAO,CAACkB,YAAR,CAAqBL,QAArB,CAAD;AADI,CAAL,CAAnC;;AAIA,eAAehB,OAAO,CACpBiC,eADoB,EAEpBE,kBAFoB,CAAP,CAGb9B,WAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport CompanyListItem from './CompanyListItem';\nimport Filter from './Filter';\nimport actions from '../actions';\nimport Notifier from '../util/Notifier';\n\nclass CompanyList extends React.Component {\n  constructor() {\n    super();\n  }\n  \n  // Returns companies that should be visible according to active filter\n  getFilteredCompanies() {\n    let filteredCompanies;\n\n    if (filters.length) {\n      filteredCompanies = companies.filter(\n        company => filters.includes(company.location)\n      )\n    } else {\n      filteredCompanies = companies;\n    }\n\n    return filteredCompanies;\n  }\n\n  // Filter click handler\n  onFilterClick(event) {\n    event.preventDefault();\n\n    this.props.toggleFilter(event.target.innerText);\n  }\n\n  // Company item click handler\n  onItemClick(company) {\n    Notifier.notify(`${company.name} is located in ${company.location}`);\n  }\n\n  render() {\n    const { companies, filters } = this.props;\n    const locations = [...new Set(companies.map(company => company.location))];\n\n    return (\n      <div>\n        {locations.map(location => (\n          <Filter\n            active={filters.includes(location)}\n            key={location}\n            location={location}\n            onClick={onFilterClick}>\n          </Filter>\n        ))}\n\n        <ul>\n          {getFilteredCompanies().map(company => (\n            <CompanyListItem\n              key={company.id}\n              onClick={onItemClick.bind(null, company)}\n              {...company}>\n            </CompanyListItem>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilter: location => dispatch(actions.toggleFilter(location))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyList);"]},"metadata":{},"sourceType":"module"}