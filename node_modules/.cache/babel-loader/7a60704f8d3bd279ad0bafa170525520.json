{"ast":null,"code":"var _jsxFileName = \"/home/dnordstrom/Code/javascript-interview-exercises/src/components/CompanyList.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport CompanyListItem from './CompanyListItem';\nimport Filter from './Filter';\nimport actions from '../actions';\nimport Notifier from '../util/Notifier';\n\nfunction CompanyList(props) {\n  const companies = props.companies,\n        filters = props.filters,\n        toggleFilter = props.toggleFilter;\n  const locations = [...new Set(companies.map(company => company.location))]; // Returns companies that should be visible according to active filter\n\n  const getFilteredCompanies = () => {\n    let filteredCompanies;\n\n    if (filters.length) {\n      filteredCompanies = companies.filter(company => filters.includes(company.location));\n    } else {\n      filteredCompanies = companies;\n    }\n\n    return filteredCompanies;\n  }; // Filter click handler\n\n\n  const onFilterClick = event => {\n    event.preventDefault();\n    toggleFilter(event.target.innerText);\n  }; // Company item click handler\n\n\n  const onItemClick = company => {\n    Notifier.notify(\"\".concat(company.name, \" is located in \").concat(company.location));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, locations.map(location => React.createElement(Filter, {\n    active: filters.includes(location),\n    key: location,\n    location: location,\n    onClick: onFilterClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, getFilteredCompanies().map(company => React.createElement(CompanyListItem, Object.assign({\n    key: company.id,\n    onClick: onItemClick.bind(null, company)\n  }, company, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilter: location => dispatch(actions.toggleFilter(location))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyList);","map":{"version":3,"sources":["/home/dnordstrom/Code/javascript-interview-exercises/src/components/CompanyList.js"],"names":["React","useState","connect","CompanyListItem","Filter","actions","Notifier","CompanyList","props","companies","filters","toggleFilter","locations","Set","map","company","location","getFilteredCompanies","filteredCompanies","length","filter","includes","onFilterClick","event","preventDefault","target","innerText","onItemClick","notify","name","id","bind","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,QAClBC,SADkB,GACmBD,KADnB,CAClBC,SADkB;AAAA,QACPC,OADO,GACmBF,KADnB,CACPE,OADO;AAAA,QACEC,YADF,GACmBH,KADnB,CACEG,YADF;AAE1B,QAAMC,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,SAAS,CAACK,GAAV,CAAcC,OAAO,IAAIA,OAAO,CAACC,QAAjC,CAAR,CAAJ,CAAlB,CAF0B,CAI1B;;AACA,QAAMC,oBAAoB,GAAG,MAAM;AACjC,QAAIC,iBAAJ;;AAEA,QAAIR,OAAO,CAACS,MAAZ,EAAoB;AAClBD,MAAAA,iBAAiB,GAAGT,SAAS,CAACW,MAAV,CAClBL,OAAO,IAAIL,OAAO,CAACW,QAAR,CAAiBN,OAAO,CAACC,QAAzB,CADO,CAApB;AAGD,KAJD,MAIO;AACLE,MAAAA,iBAAiB,GAAGT,SAApB;AACD;;AAED,WAAOS,iBAAP;AACD,GAZD,CAL0B,CAmB1B;;;AACA,QAAMI,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEAb,IAAAA,YAAY,CAACY,KAAK,CAACE,MAAN,CAAaC,SAAd,CAAZ;AACD,GAJD,CApB0B,CA0B1B;;;AACA,QAAMC,WAAW,GAAIZ,OAAD,IAAa;AAC/BT,IAAAA,QAAQ,CAACsB,MAAT,WAAmBb,OAAO,CAACc,IAA3B,4BAAiDd,OAAO,CAACC,QAAzD;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,CAACE,GAAV,CAAcE,QAAQ,IACrB,oBAAC,MAAD;AACE,IAAA,MAAM,EAAEN,OAAO,CAACW,QAAR,CAAiBL,QAAjB,CADV;AAEE,IAAA,GAAG,EAAEA,QAFP;AAGE,IAAA,QAAQ,EAAEA,QAHZ;AAIE,IAAA,OAAO,EAAEM,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,oBAAoB,GAAGH,GAAvB,CAA2BC,OAAO,IACjC,oBAAC,eAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACe,EADf;AAEE,IAAA,OAAO,EAAEH,WAAW,CAACI,IAAZ,CAAiB,IAAjB,EAAuBhB,OAAvB;AAFX,KAGMA,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CAVF,CADF;AAsBD;;AAAA;;AAED,MAAMiB,eAAe,GAAGC,KAAK,KAAK;AAChCxB,EAAAA,SAAS,EAAEwB,KAAK,CAACxB,SADe;AAEhCC,EAAAA,OAAO,EAAEuB,KAAK,CAACvB;AAFiB,CAAL,CAA7B;;AAKA,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,YAAY,EAAEK,QAAQ,IAAImB,QAAQ,CAAC9B,OAAO,CAACM,YAAR,CAAqBK,QAArB,CAAD;AADI,CAAL,CAAnC;;AAIA,eAAed,OAAO,CACpB8B,eADoB,EAEpBE,kBAFoB,CAAP,CAGb3B,WAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport CompanyListItem from './CompanyListItem';\nimport Filter from './Filter';\nimport actions from '../actions';\nimport Notifier from '../util/Notifier';\n\nfunction CompanyList(props) {\n  const { companies, filters, toggleFilter } = props;\n  const locations = [...new Set(companies.map(company => company.location))];\n  \n  // Returns companies that should be visible according to active filter\n  const getFilteredCompanies = () => {\n    let filteredCompanies;\n\n    if (filters.length) {\n      filteredCompanies = companies.filter(\n        company => filters.includes(company.location)\n      )\n    } else {\n      filteredCompanies = companies;\n    }\n\n    return filteredCompanies;\n  }\n\n  // Filter click handler\n  const onFilterClick = (event) => {\n    event.preventDefault();\n\n    toggleFilter(event.target.innerText);\n  }\n\n  // Company item click handler\n  const onItemClick = (company) => {\n    Notifier.notify(`${company.name} is located in ${company.location}`);\n  };\n\n  return (\n    <div>\n      {locations.map(location => (\n        <Filter\n          active={filters.includes(location)}\n          key={location}\n          location={location}\n          onClick={onFilterClick}>\n        </Filter>\n      ))}\n\n      <ul>\n        {getFilteredCompanies().map(company => (\n          <CompanyListItem\n            key={company.id}\n            onClick={onItemClick.bind(null, company)}\n            {...company}>\n          </CompanyListItem>\n        ))}\n      </ul>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFilter: location => dispatch(actions.toggleFilter(location))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyList);"]},"metadata":{},"sourceType":"module"}