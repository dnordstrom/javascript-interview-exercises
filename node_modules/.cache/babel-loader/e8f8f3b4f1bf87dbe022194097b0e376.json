{"ast":null,"code":"import _defineProperty from \"/home/dnordstrom/Code/javascript-interview-exercises/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport companies from '../api';\nimport actions from '../actions';\nconst initialState = {\n  companies,\n  filters: [],\n  filteredCompanies: companies\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.Types.TOGGLE_FILTER:\n      {\n        const filters = [...state.filters];\n        const index = filters.indexOf(action.data);\n\n        if (index !== -1) {\n          filters.splice(index, 1);\n        } else {\n          filters.push(action.data);\n        }\n\n        let filteredCompanies;\n\n        if (filters.length) {\n          filteredCompanies = companies.filter(company => filters.includes(company.location));\n        } else {\n          filteredCompanies = companies;\n        }\n\n        return _objectSpread({}, state, {\n          filters,\n          filteredCompanies\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/dnordstrom/Code/javascript-interview-exercises/src/reducers/index.js"],"names":["companies","actions","initialState","filters","filteredCompanies","reducer","state","action","type","Types","TOGGLE_FILTER","index","indexOf","data","splice","push","length","filter","company","includes","location"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,QAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,YAAY,GAAG;AACnBF,EAAAA,SADmB;AAEnBG,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,iBAAiB,EAAEJ;AAHA,CAArB;;AAMA,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,KAAR,CAAcC,aAAnB;AAAkC;AAChC,cAAMP,OAAO,GAAG,CAAC,GAAGG,KAAK,CAACH,OAAV,CAAhB;AACA,cAAMQ,KAAK,GAAGR,OAAO,CAACS,OAAR,CAAgBL,MAAM,CAACM,IAAvB,CAAd;;AAEA,YAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBR,UAAAA,OAAO,CAACW,MAAR,CAAeH,KAAf,EAAsB,CAAtB;AACD,SAFD,MAEO;AACLR,UAAAA,OAAO,CAACY,IAAR,CAAaR,MAAM,CAACM,IAApB;AACD;;AAED,YAAIT,iBAAJ;;AAEA,YAAID,OAAO,CAACa,MAAZ,EAAoB;AAClBZ,UAAAA,iBAAiB,GAAGJ,SAAS,CAACiB,MAAV,CAClBC,OAAO,IAAIf,OAAO,CAACgB,QAAR,CAAiBD,OAAO,CAACE,QAAzB,CADO,CAApB;AAGD,SAJD,MAIO;AACLhB,UAAAA,iBAAiB,GAAGJ,SAApB;AACD;;AAED,iCAAYM,KAAZ;AAAmBH,UAAAA,OAAnB;AAA4BC,UAAAA;AAA5B;AACD;;AAED;AACE,aAAOE,KAAP;AA1BJ;AA6BD,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["import companies from '../api';\nimport actions from '../actions';\n\nconst initialState = {\n  companies,\n  filters: [],\n  filteredCompanies: companies\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case actions.Types.TOGGLE_FILTER: {\n      const filters = [...state.filters];\n      const index = filters.indexOf(action.data);\n      \n      if (index !== -1) {\n        filters.splice(index, 1);\n      } else {\n        filters.push(action.data);\n      }\n\n      let filteredCompanies;\n\n      if (filters.length) {\n        filteredCompanies = companies.filter(\n          company => filters.includes(company.location)\n        );\n      } else {\n        filteredCompanies = companies;\n      }\n      \n      return { ...state, filters, filteredCompanies };\n    }\n    \n    default:\n      return state;\n\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}